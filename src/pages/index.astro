---
import "~/styles/index.css";

/* Any Astro component imports MUST come after global style imports, due to css loading order! (Especially tailwind.) */
import Path from "path";
import type { NavItem, SectionInfo } from "~/types";

import Header from "$components/header.astro";
import Splash from "$components/splash.astro";

import * as what from "$content/sections/what-is-it.mdx";
import * as about from "$content/sections/about.mdx";

import siteInfo from "$content/site";

/* const test = await Astro.glob("../content/sections/*.mdx"); */
const sectionData = [what, about];

const { generator, site } = Astro;
const image = new URL(siteInfo.preview_image, site);

const sections = sectionData.map((s) => ({
  info: {
    id: Path.parse(s.file).name,
    title: s.frontmatter.title,
    subtitle: s.frontmatter.subtitle,
    Body: s.Content,
  } as SectionInfo,
  Layout: s.layout,
}));

const navItems: NavItem[] = sections.map((s) => ({
  id: "#" + s.info.id,
  title: s.info.title,
}));
const target = navItems[0];
---

<!DOCTYPE html>
<html lang="en" class="h-full motion-safe:scroll-smooth" data-theme="light">
  <head>
    <base href={import.meta.env.BASE_URL} />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="icon" href="/favicon.ico" />
    <meta name="generator" content={generator} />

    <title>{siteInfo.title}</title>
    <meta name="description" content={siteInfo.description} />

    <!-- social media -->
    <meta property="og:title" content={siteInfo.title} />
    <meta property="og:type" content="website" />
    <meta property="og:description" content={siteInfo.description} />
    <meta property="og:image" content={image} />
    <meta property="og:url" content={site} />
    <meta name="twitter:card" content="summary_large_image" />
  </head>
  <body
    class="h-full overflow-x-hidden bg-default text-default text-base selection:bg-secondary selection:text-white"
  >
    <Header
      mainTitle={siteInfo.title}
      navItems={navItems}
      scrollTarget={target}
    />
    <Splash />
    <div class="space-y-10 px-6 py-16 sm:space-y-24 sm:px-8">
      {sections.map((S) => <S.Layout info={S.info} />)}
    </div>
  </body>
</html>
